//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "lffilter.h"

//****************************************************************************************************
//глобальные переменные
//****************************************************************************************************

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

#define N_TAP 31

//****************************************************************************************************
//константы
//****************************************************************************************************

static const float FIRCoef[N_TAP]=
{ 
 0.02139502659757795000,
 0.02273550034409449500,
 0.02411531931674383200,
 0.02553359910121268500,
 0.02698931267274278300,
 0.02848128945741259700,
 0.03000820845422270600,
 0.03156859783510958300,
 0.03316082863575674900,
 0.03478311499438121300,
 0.03643350851604675700,
 0.03810989925192471300,
 0.03981001084289421300,
 0.04153140234128065200,
 0.04327146423910160200,
 0.04414583479899514300,
 0.04327146423910160200,
 0.04153140234128065200,
 0.03981001084289421300,
 0.03810989925192471300,
 0.03643350851604675700,
 0.03478311499438121300,
 0.03316082863575674900,
 0.03156859783510958300,
 0.03000820845422270600,
 0.02848128945741259700,
 0.02698931267274278300,
 0.02553359910121268500,
 0.02411531931674383200,
 0.02273550034409449500,
 0.02139502659757795000
};

//****************************************************************************************************
//реализация функций
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//фильтр канала 1
//----------------------------------------------------------------------------------------------------
float LFFILTER_FilterChannel1(float new_sample) 
{
 static float x[N_TAP];
 float y=0;
 int32_t n;
 for(n=N_TAP-1;n>0;n--) x[n]=x[n-1];
 x[0]=new_sample;
	
 for(n=0;n<N_TAP;n++) y+=FIRCoef[n]*x[n];
 return(y);
}

//----------------------------------------------------------------------------------------------------
//фильтр канала 2
//----------------------------------------------------------------------------------------------------
float LFFILTER_FilterChannel2(float new_sample) 
{
 static float x[N_TAP];
 float y=0;
 int32_t n;
 for(n=N_TAP-1;n>0;n--) x[n]=x[n-1];
 x[0]=new_sample;
	
 for(n=0;n<N_TAP;n++) y+=FIRCoef[n]*x[n];
 return(y);
}

//----------------------------------------------------------------------------------------------------
//фильтр канала 3
//----------------------------------------------------------------------------------------------------
float LFFILTER_FilterChannel3(float new_sample) 
{
 static float x[N_TAP];
 float y=0;
 int32_t n;
 for(n=N_TAP-1;n>0;n--) x[n]=x[n-1];
 x[0]=new_sample;
	
 for(n=0;n<N_TAP;n++) y+=FIRCoef[n]*x[n];
 return(y);
}
